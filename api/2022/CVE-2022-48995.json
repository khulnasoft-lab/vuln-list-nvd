{
  "id": "CVE-2022-48995",
  "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
  "published": "2024-10-21T20:15:11.343",
  "lastModified": "2024-10-23T15:13:25.583",
  "vulnStatus": "Awaiting Analysis",
  "descriptions": [
    {
      "lang": "en",
      "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nInput: raydium_ts_i2c - fix memory leak in raydium_i2c_send()\n\nThere is a kmemleak when test the raydium_i2c_ts with bpf mock device:\n\n  unreferenced object 0xffff88812d3675a0 (size 8):\n    comm \"python3\", pid 349, jiffies 4294741067 (age 95.695s)\n    hex dump (first 8 bytes):\n      11 0e 10 c0 01 00 04 00                          ........\n    backtrace:\n      [\u003c0000000068427125\u003e] __kmalloc+0x46/0x1b0\n      [\u003c0000000090180f91\u003e] raydium_i2c_send+0xd4/0x2bf [raydium_i2c_ts]\n      [\u003c000000006e631aee\u003e] raydium_i2c_initialize.cold+0xbc/0x3e4 [raydium_i2c_ts]\n      [\u003c00000000dc6fcf38\u003e] raydium_i2c_probe+0x3cd/0x6bc [raydium_i2c_ts]\n      [\u003c00000000a310de16\u003e] i2c_device_probe+0x651/0x680\n      [\u003c00000000f5a96bf3\u003e] really_probe+0x17c/0x3f0\n      [\u003c00000000096ba499\u003e] __driver_probe_device+0xe3/0x170\n      [\u003c00000000c5acb4d9\u003e] driver_probe_device+0x49/0x120\n      [\u003c00000000264fe082\u003e] __device_attach_driver+0xf7/0x150\n      [\u003c00000000f919423c\u003e] bus_for_each_drv+0x114/0x180\n      [\u003c00000000e067feca\u003e] __device_attach+0x1e5/0x2d0\n      [\u003c0000000054301fc2\u003e] bus_probe_device+0x126/0x140\n      [\u003c00000000aad93b22\u003e] device_add+0x810/0x1130\n      [\u003c00000000c086a53f\u003e] i2c_new_client_device+0x352/0x4e0\n      [\u003c000000003c2c248c\u003e] of_i2c_register_device+0xf1/0x110\n      [\u003c00000000ffec4177\u003e] of_i2c_notify+0x100/0x160\n  unreferenced object 0xffff88812d3675c8 (size 8):\n    comm \"python3\", pid 349, jiffies 4294741070 (age 95.692s)\n    hex dump (first 8 bytes):\n      22 00 36 2d 81 88 ff ff                          \".6-....\n    backtrace:\n      [\u003c0000000068427125\u003e] __kmalloc+0x46/0x1b0\n      [\u003c0000000090180f91\u003e] raydium_i2c_send+0xd4/0x2bf [raydium_i2c_ts]\n      [\u003c000000001d5c9620\u003e] raydium_i2c_initialize.cold+0x223/0x3e4 [raydium_i2c_ts]\n      [\u003c00000000dc6fcf38\u003e] raydium_i2c_probe+0x3cd/0x6bc [raydium_i2c_ts]\n      [\u003c00000000a310de16\u003e] i2c_device_probe+0x651/0x680\n      [\u003c00000000f5a96bf3\u003e] really_probe+0x17c/0x3f0\n      [\u003c00000000096ba499\u003e] __driver_probe_device+0xe3/0x170\n      [\u003c00000000c5acb4d9\u003e] driver_probe_device+0x49/0x120\n      [\u003c00000000264fe082\u003e] __device_attach_driver+0xf7/0x150\n      [\u003c00000000f919423c\u003e] bus_for_each_drv+0x114/0x180\n      [\u003c00000000e067feca\u003e] __device_attach+0x1e5/0x2d0\n      [\u003c0000000054301fc2\u003e] bus_probe_device+0x126/0x140\n      [\u003c00000000aad93b22\u003e] device_add+0x810/0x1130\n      [\u003c00000000c086a53f\u003e] i2c_new_client_device+0x352/0x4e0\n      [\u003c000000003c2c248c\u003e] of_i2c_register_device+0xf1/0x110\n      [\u003c00000000ffec4177\u003e] of_i2c_notify+0x100/0x160\n\nAfter BANK_SWITCH command from i2c BUS, no matter success or error\nhappened, the tx_buf should be freed."
    },
    {
      "lang": "es",
      "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: Entrada: raydium_ts_i2c - arregla pérdida de memoria en raydium_i2c_send() Hay una pérdida de kmem cuando se prueba raydium_i2c_ts con bpf mock device: unreferenced object 0xffff88812d3675a0 (size 8): comm \"python3\", pid 349, jiffies 4294741067 (age 95.695s) hex dump (first 8 bytes): 11 0e 10 c0 01 00 04 00 ........ backtrace: [\u0026lt;0000000068427125\u0026gt;] __kmalloc+0x46/0x1b0 [\u0026lt;0000000090180f91\u0026gt;] raydium_i2c_send+0xd4/0x2bf [raydium_i2c_ts] [\u0026lt;000000006e631aee\u0026gt;] raydium_i2c_initialize.cold+0xbc/0x3e4 [raydium_i2c_ts] [\u0026lt;00000000dc6fcf38\u0026gt;] raydium_i2c_probe+0x3cd/0x6bc [raydium_i2c_ts] [\u0026lt;00000000a310de16\u0026gt;] i2c_device_probe+0x651/0x680 [\u0026lt;00000000f5a96bf3\u0026gt;] really_probe+0x17c/0x3f0 [\u0026lt;00000000096ba499\u0026gt;] __driver_probe_device+0xe3/0x170 [\u0026lt;00000000c5acb4d9\u0026gt;] dispositivo_de_sonda_de_controlador+0x49/0x120 [\u0026lt;00000000264fe082\u0026gt;] __controlador_de_adjuntar_dispositivo+0xf7/0x150 [\u0026lt;00000000f919423c\u0026gt;] bus_para_cada_unidad+0x114/0x180 [\u0026lt;00000000e067feca\u0026gt;] __adjuntar_dispositivo+0x1e5/0x2d0 [\u0026lt;0000000054301fc2\u0026gt;] dispositivo_de_sonda_de_bus+0x126/0x140 [\u0026lt;00000000aad93b22\u0026gt;] dispositivo_agregar+0x810/0x1130 [\u0026lt;00000000c086a53f\u0026gt;] i2c_new_client_device+0x352/0x4e0 [\u0026lt;000000003c2c248c\u0026gt;] of_i2c_register_device+0xf1/0x110 [\u0026lt;00000000ffec4177\u0026gt;] of_i2c_notify+0x100/0x160 objeto sin referencia 0xffff88812d3675c8 (tamaño 8): comm \"python3\", pid 349, jiffies 4294741070 (antigüedad 95,692 s) volcado hexadecimal (primeros 8 bytes): 22 00 36 2d 81 88 ff ff \".6-.... traza inversa: [\u0026lt;0000000068427125\u0026gt;] __kmalloc+0x46/0x1b0 [\u0026lt;0000000090180f91\u0026gt;] raydium_i2c_send+0xd4/0x2bf [raydium_i2c_ts] [\u0026lt;000000001d5c9620\u0026gt;] raydium_i2c_initialize.cold+0x223/0x3e4 [raydium_i2c_ts] [\u0026lt;00000000dc6fcf38\u0026gt;] raydium_i2c_probe+0x3cd/0x6bc [raydium_i2c_ts] [\u0026lt;00000000a310de16\u0026gt;] i2c_device_probe+0x651/0x680 [\u0026lt;00000000f5a96bf3\u0026gt;] realmente_sondeo+0x17c/0x3f0 [\u0026lt;00000000096ba499\u0026gt;] __dispositivo_de_sonda_de_controlador+0xe3/0x170 [\u0026lt;00000000c5acb4d9\u0026gt;] dispositivo_de_sonda_de_controlador+0x49/0x120 [\u0026lt;00000000264fe082\u0026gt;] __dispositivo_adjunto_controlador+0xf7/0x150 [\u0026lt;00000000f919423c\u0026gt;] bus_para_cada_unidad+0x114/0x180 [\u0026lt;00000000e067feca\u0026gt;] __dispositivo_adjunto+0x1e5/0x2d0 [\u0026lt;0000000054301fc2\u0026gt;] bus_probe_device+0x126/0x140 [\u0026lt;00000000aad93b22\u0026gt;] device_add+0x810/0x1130 [\u0026lt;00000000c086a53f\u0026gt;] i2c_new_client_device+0x352/0x4e0 [\u0026lt;000000003c2c248c\u0026gt;] of_i2c_register_device+0xf1/0x110 [\u0026lt;00000000ffec4177\u0026gt;] of_i2c_notify+0x100/0x160 Después del comando BANK_SWITCH del BUS i2c, sin importar si se produjo un éxito o un error, se debe liberar el tx_buf."
    }
  ],
  "metrics": {},
  "references": [
    {
      "url": "https://git.kernel.org/stable/c/097c1c7a28e3da8f2811ba532be6e81faab15aab",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/53b9b1201e34ccc895971218559123625c56fbcd",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/8c9a59939deb4bfafdc451100c03d1e848b4169b",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/a82869ac52f3d9db4b2cf8fd41edc2dee7a75a61",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    }
  ]
}