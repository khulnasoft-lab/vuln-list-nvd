{
  "id": "CVE-2024-42141",
  "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
  "published": "2024-07-30T08:15:05.917",
  "lastModified": "2024-07-30T08:15:05.917",
  "vulnStatus": "Received",
  "descriptions": [
    {
      "lang": "en",
      "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: ISO: Check socket flag instead of hcon\n\nThis fixes the following Smatch static checker warning:\n\nnet/bluetooth/iso.c:1364 iso_sock_recvmsg()\nerror: we previously assumed 'pi-\u003econn-\u003ehcon' could be null (line 1359)\n\nnet/bluetooth/iso.c\n1347 static int iso_sock_recvmsg(struct socket *sock, struct msghdr *msg,\n1348                             size_t len, int flags)\n1349 {\n1350         struct sock *sk = sock-\u003esk;\n1351         struct iso_pinfo *pi = iso_pi(sk);\n1352\n1353         BT_DBG(\"sk %p\", sk);\n1354\n1355         if (test_and_clear_bit(BT_SK_DEFER_SETUP,\n                                      \u0026bt_sk(sk)-\u003eflags)) {\n1356                 lock_sock(sk);\n1357                 switch (sk-\u003esk_state) {\n1358                 case BT_CONNECT2:\n1359                         if (pi-\u003econn-\u003ehcon \u0026\u0026\n                                     ^^^^^^^^^^^^^^ If -\u003ehcon is NULL\n\n1360                             test_bit(HCI_CONN_PA_SYNC,\n                                         \u0026pi-\u003econn-\u003ehcon-\u003eflags)) {\n1361                                 iso_conn_big_sync(sk);\n1362                                 sk-\u003esk_state = BT_LISTEN;\n1363                         } else {\n--\u003e 1364                         iso_conn_defer_accept(pi-\u003econn-\u003ehcon);\n                                                       ^^^^^^^^^^^^^^\n                                                       then we're toast\n\n1365                                 sk-\u003esk_state = BT_CONFIG;\n1366                         }\n1367                         release_sock(sk);\n1368                         return 0;\n1369                 case BT_CONNECTED:\n1370                         if (test_bit(BT_SK_PA_SYNC,"
    },
    {
      "lang": "es",
      "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: Bluetooth: ISO: Verifique el indicador de socket en lugar de hcon. Esto corrige la siguiente advertencia del verificador estático de Smatch: net/bluetooth/iso.c:1364 iso_sock_recvmsg() error: previamente asumimos 'pi -\u0026gt;conn-\u0026gt;hcon' podría ser nulo (línea 1359) net/bluetooth/iso.c 1347 static int iso_sock_recvmsg(struct socket *sock, struct msghdr *msg, 1348 size_t len, int flags) 1349 { 1350 struct sock *sk = calcetín-\u0026gt;sk; 1351 estructura iso_pinfo *pi = iso_pi(sk); 1352 1353 BT_DBG(\"sk%p\",sk); 1354 1355 if (test_and_clear_bit(BT_SK_DEFER_SETUP, \u0026amp;bt_sk(sk)-\u0026gt;flags)) { 1356 lock_sock(sk); 1357 interruptor (sk-\u0026gt;sk_state) { 1358 caso BT_CONNECT2: 1359 si (pi-\u0026gt;conn-\u0026gt;hcon \u0026amp;\u0026amp; ^^^^^^^^^^^^^^ Si -\u0026gt;hcon es NULL 1360 test_bit(HCI_CONN_PA_SYNC, \u0026amp;pi -\u0026gt;conn-\u0026gt;hcon-\u0026gt;flags)) { 1361 iso_conn_big_sync(sk); 1362 sk-\u0026gt;sk_state = BT_LISTEN; 1363 } else { --\u0026gt; 1364 iso_conn_defer_accept(pi-\u0026gt;conn-\u0026gt;hcon); ^^^^^^^^^^^^^^ entonces estamos 1365 sk-\u0026gt;sk_state = BT_CONFIG; 1366 } 1367 liberación_sock(sk); 1368 devuelve 0; 1369 caso BT_CONNECTED: 1370 si (test_bit(BT_SK_PA_SYNC,"
    }
  ],
  "metrics": {},
  "references": [
    {
      "url": "https://git.kernel.org/stable/c/045669710464a21c67e690ef14698fd71857cb11",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/33fabef489169c6db87843ef23351ed0d5e51ad8",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/596b6f081336e77764ca35cfeab66d0fcdbe544e",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    }
  ]
}